{"version":3,"sources":["components/Dialogs/DailogItem/DialogItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DailogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","src","alt","to","name","Message","message","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogs","map","d","photo","messagesElements","messages","m","dialogItem","value","sentMessage","newMessageText","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,wBAAwB,SAAW,4B,oBCA1ID,EAAOC,QAAU,CAAC,QAAU,2B,6GCabC,EAVI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,sBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,UACE,qBAAKC,IAAKP,EAAMO,IAAKC,IAAI,KACzB,eAAC,IAAD,CAASC,GAAIR,EAAb,UAAoBD,EAAMU,KAA1B,W,2CCGSC,EARC,SAACX,GACf,OACE,qBAAKG,UAAWC,IAAQQ,QAAxB,SAAkCZ,EAAMY,W,kCCGtCC,EAAWC,YAAiB,IAsC5BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAVL,SAAChB,GACtB,OACE,uBAAMkB,SAAUlB,EAAMmB,aAAtB,UACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAM,iBAClCa,SAAU,CAACC,IAAUX,GAAYY,YAAa,gBAC9C,oJAOSC,EAtCC,SAAC1B,GAEf,IAAM2B,EAAkB3B,EAAM4B,QAAQC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBR,GAAI4B,EAAE5B,GAAIK,IAAKuB,EAAEC,OAAvBD,EAAE5B,OAC5E8B,EAAmBhC,EAAMiC,SAASJ,KAAI,SAACK,GAAD,OAAO,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAEhC,OAQvF,OACE,sBAAKC,UAAWC,IAAQwB,QAAxB,UACE,qBAAKzB,UAAWC,IAAQ+B,WAAxB,SACGR,IAEH,qBAAKxB,UAAWC,IAAQ6B,SAAxB,SACGD,IAEH,cAACjB,EAAD,CAAqBG,SAbH,SAACkB,GACrBpC,EAAMqC,YAAYD,EAAME,uBCUbC,sBACbC,aApBoB,SAACC,GACrB,MACE,CACEb,QAASa,EAAMC,YAAYd,QAC3BK,SAAUQ,EAAMC,YAAYT,SAC5BK,eAAgBG,EAAMC,YAAYJ,mBAKf,SAACK,GACxB,MACE,CACEN,YAAa,SAACC,GAAqBK,EAASC,YAAwBN,SAQxEO,IAFaN,CAGbb","file":"static/js/3.86bffef1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__3Z_F4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1m8l5\",\"dialogItem\":\"Dialogs_dialogItem__2voCW\",\"active\":\"Dialogs_active__FM7xN\",\"messages\":\"Dialogs_messages__2d788\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1Xw4e\"};","import { NavLink } from 'react-router-dom';\r\nimport classes from './DialogItem.module.css';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={classes.dialog + ' ' + classes.active}>\r\n      <img src={props.src} alt=\"\"/>\r\n      <NavLink to={path}>{props.name} </NavLink>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default DialogItem;\r\n","\r\nimport classes from './Message.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={classes.message}>{props.message}</div>\r\n  )\r\n};\r\n\r\n\r\n\r\nexport default Message;\r\n","import DialogItem from './DailogItem/DialogItem';\r\nimport React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form';\r\nimport { Textarea } from '../Common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../units/validators/validators';\r\n\r\nconst maxLength= maxLengthCreator(30);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  const dialogsElements = props.dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id} src={d.photo} />);\r\n  const messagesElements = props.messages.map((m) => <Message message={m.message} key={m.id} />)\r\n\r\n\r\n  const addNewMessage = (value) => {\r\n    props.sentMessage(value.newMessageText);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogItem}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={classes.messages}>\r\n        {messagesElements}\r\n      </div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  )\r\n\r\n};\r\n\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={Textarea} name={\"newMessageText\"}\r\n      validate={[required, maxLength]} placeholder={\"Add message\"} />\r\n      <button > Добавить сообщение</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addMessageActionCreator } from '../../Redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return (\r\n    {\r\n      dialogs: state.dialogsPage.dialogs,\r\n      messages: state.dialogsPage.messages,\r\n      newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n  )\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return (\r\n    {\r\n      sentMessage: (newMessageText) => { dispatch(addMessageActionCreator(newMessageText)) }\r\n    }\r\n  )\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}